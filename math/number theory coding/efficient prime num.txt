// https://www.hackerearth.com/practice/math/number-theory/basic-number-theory-1/practice-problems/algorithm/hell-1/

// Number of prime numbers between L and R
#include <bits/stdc++.h>
using namespace std;
#define max 1000001
#define gc getchar_unlocked
#define pc putchar_unlocked
int a[max];
inline void read_in(int &x)
{
	register char c = gc();
	while(c<'0' || c>'9')
		c = gc();
 
	x=0;
	while(c>='0' && c<='9')
	{
		x = 10 * x + c - 48;
		c = gc();
	}
 
}
 
inline void read_out( int &b)
{
	char snum[12];
	int i=0;
	do
	{
		snum[i++]=b%10+'0';
		b=b/10;
	}while(b);
	i=i-1;
 
	while (i>=0)
	{
		pc(snum[i--]);
	}
}
    	
int main(){
for(int i=2; i<max; i++)
a[i]=1;
for(int i=2; i*i<=max; i++){
    if(a[i]){
        for(int j=i*i; j<max; j+=i){
            a[j]=0;
        }
    }
}
for(int i=2; i<max; i++)
a[i]+=a[i-1];
int q;
read_in(q);
while(q--){
    int l,r;
   read_in(l);
   read_in(r);
    if(l>r)
   swap(l,r);
   int ans=a[r]-a[l-1];
read_out(ans);
pc('\n');
}
return 0;
}


/*********************************************************************************
********************************************************************************************************/
*****************************************************************************************************************************/

#include <bits/stdc++.h>
using namespace std;
int a[1000008];
int b[1000008];
int main()
{
   
    for(int i=1;i<=1000000;i++)
    {a[i]=1;b[i]=0;}
     a[0]=a[1]=0;
    for(int i=2;i*i<=1000000;i++)
    {
        if(a[i]==1)
        {
            for(int j=i*i;j<=1000000;j+=i)
            a[j]=0;
        }
    }
    for(int i=0;i<=1000000;i++)
    {
        if(a[i]==1)
        b[i]=1;
        b[i]+=b[i-1];
    }
      int q;
     scanf("%d",&q);
      while(q--)
      {
          int l,r,t;
          scanf("%d %d",&l,&r);
          if(l>r)
          {
              t=l;
              l=r;
              r=t;
          }
         printf("%d\n",b[r]-b[l-1]);
      }
    return 0;
}