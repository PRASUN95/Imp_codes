#include<bits/stdc++.h>
using namespace std;
#define int long long
#define mod 1000000007
 
int power(int x,  int y)
{
    int res = 1;
 
    while (y > 0)
    {
 
        if (y & 1)
            res = (res*x)%mod;
 
 
        y = y>>1;
        x = (x*x)%mod;
    }
    return res%mod;
}
 main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int fib[2000005],fact[2000005];
    fib[1]=1,fib[2]=2,fact[1]=1;int pref[2000005];
    for(int i=3;i<2000005;i++)
    {
        fib[i]=(fib[i-1]+fib[i-2])%mod;
    }
    fib[0]=0;fact[0]=1;
     for(int i=2;i<2000005;i++)
    {
        fact[i]=(fact[i-1]*i)%mod;
    }
    pref[1]=1,pref[0]=0;
    for(int i=2;i<2000005;i++)
    {
        pref[i]=(pref[i-1]+(fact[i]*fib[i])%mod)%mod;
    }
    int q;cin>>q;
    while(q--)
    {
        int n,m,k;
        cin>>n>>m>>k;
        int fibk[2000005],factk[2000005];
         fibk[1]=1,fibk[2]=2,factk[1]=1;int prefk[2000005];
    for(int i=3;i<2000005;i++)
    {
        fibk[i]=(fibk[i-1]+fibk[i-2])%k;
    }
    fibk[0]=0;factk[0]=1;
     for(int i=2;i<2000005;i++)
    {
        factk[i]=(factk[i-1]*i)%k;
    }
    prefk[1]=1,prefk[0]=0;
    for(int i=2;i<2000005;i++)
    {
        prefk[i]=(prefk[i-1]+(factk[i]*fibk[i])%k)%k;
    }
        //cout<<(pref[m]-pref[n])/k<<"\n";
        int a=(pref[m]-pref[n-1])%mod;
        int b=(prefk[m]-prefk[n-1])%k;
        if(a<0)
        a=a+mod;
        if(b<0)
        b=b+k;
        //cout<<a<<endl;
        a=(a-b)%mod;
 
        if(a<0)
        a=a+mod;
        cout<<(a*power(k,mod-2))%mod<<endl;
 
    }
}
Language: C++












#include <bits/stdc++.h>
using namespace std;
 
const int N = 2 << 20;
const int M = 1000000007;
 
int n, m, k;
 
struct V {
    int a, b;   // a * k + b
    V() : a(0), b(0) {}
    V(int a_, int b_) : a(a_), b(b_) {}
};
 
V operator + (const V& v1, const V& v2) {
    int a = v1.a + v2.a, b = v1.b + v2.b;
    if (a >= M) a -= M;
    if (b >= k) {
        ++a, b -= k;
        if (a >= M) a -= M;
    }
    return V(a, b);
}
 
V operator * (const V& v1, const V& v2) {
    int a = ((long long)v1.a * v2.a % M * k + (long long)v1.a * v2.b + (long long)v1.b * v2.a) % M;
    long long b = (long long)v1.b * v2.b;
    a = (a + b / k) % M;
    b %= k;
    return V(a, b);
}
 
int main(void) {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    int T;
    cin >> T;
    while (T-- > 0 && cin >> n >> m >> k) {
        V p = V(1 / k, 1 % k);
        V f1 = V(0, 0), f2 = p;
        V s = V(0, 0);
        for (int i = 1; i <= m; ++i) {
            swap(f1, f2);
            f2 = f1 + f2;
            p = p * V(i / k, i % k);
            if (i >= n) s = s + f2 * p;
        }
        cout << s.a << endl;
    }
    
    return 0;
}
Language: C++











#include <cstdio>
using namespace std;
 
typedef long long ll;
 
const int mod = 1000000007;
const int Maxn = 2000005;
 
int Fib[Maxn], Fac[Maxn];
int Sum[Maxn];
int t;
int n, m, k;
 
int Inv(int x)
{
    int res = 1;
    int p = mod - 2;
    while (p) {
        if (p & 1) res = ll(res) * x % mod;
        p >>= 1; x = ll(x) * x % mod;
    }
    return res;
}
 
int main()
{
    Fib[0] = Fib[1] = Fac[0] = Fac[1] = Sum[0] = 1; Sum[1] = 2;
    for (int i = 2; i < Maxn; i++) {
        Fib[i] = (Fib[i - 1] + Fib[i - 2]) % mod;
        Fac[i] = ll(i) * Fac[i - 1] % mod;
        Sum[i] = (Sum[i - 1] + ll(Fib[i]) * Fac[i]) % mod;
    }
    scanf("%d", &t);
    while (t--) {
        scanf("%d %d %d", &n, &m, &k);
        int fib0 = 0, fib1 = 1;
        int fac = 1;
        int sum = 0;
        for (int i = 1; i <= m; i++) {
            int fib2 = (fib0 + fib1) % k; fac = ll(fac) * i % k;
            fib0 = fib1; fib1 = fib2;
            if (i >= n) sum = (sum + ll(fib1) * fac) % k;
        }
        int cur = (Sum[m] - Sum[n - 1] + mod) % mod;
        cur = (cur - sum + mod) % mod;
        int res = ll(cur) * Inv(k) % mod;
        printf("%d\n", res);
    }
    return 0;
}
Language: C++