#include <bits/stdc++.h>
using namespace std;
 
 
typedef long long ll;
typedef vector<int> vi;
 
 
#define N 1111111
 
int sum[N];
 
bool checkpandigital(int n) 
 {
    vi marked(10, 0);
    int d = 0;
    while(n > 0) 
         {
            marked[n % 10] = 1;
            n /= 10;
            ++d;
         }
    int flag = 0;
    for(int i=1; i<=d; ++i) 
       {
        if(marked[i] == 0) 
          {
            flag = 1;
            break;
          }
       }
    return (flag == 0);
}
 
void init() {
    for(int i=1; i<N; ++i)
       {
         sum[i] = checkpandigital(i);
       }
    sum[0] = 0;
    for (int i=1; i<N; ++i)
        sum[i] += sum[i-1];
}
 
int main() {
    init();
    int Q;
    scanf("%d", &Q);
    for (int i=0; i<Q; ++i) {
        int L, R;
        scanf("%d%d", &L, &R);
        printf("%d\n", sum[R] - sum[L-1]);
    }
    return 0;
}
Language: C++











//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> ii;
ll pwr(ll base, ll p, ll mod = MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}
ll gcd(ll a, ll b){
    if(b == 0)  return a;
    return gcd(b, a%b);
}
bool is_almighty_pandigital(int n){
    int mask = 0, digs = 0;
    while(n){
        int d = (n % 10) - 1;
        n /= 10;
        mask |= (1<<d);
        digs++;
    }
    return (mask == (1<<digs)-1);
}
int cnt[1000*1000+5];
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    for(int i=1;i<=1000*1000;i++)
        if(is_almighty_pandigital(i)){
            cnt[i]++;
        }
    for(int i=1;i<=1000*1000;i++)
        cnt[i] += cnt[i-1];
    int t;
    cin>>t;
    assert(t >= 1 && t <= 100000);
    while(t--){
        int l, r;
        cin>>l>>r;
        assert(l >= 1 && l <= 1000000);
        assert(r >= 1 && r <= 1000000);
        assert(l <= r);
        cout<<cnt[r] - cnt[l-1]<<endl;
    }
    return 0;
}











#include <bits/stdc++.h>
using namespace std;
#define MAXN 1000005
int arr[MAXN];
int suff[MAXN];
bool valid(int n){
	int i,l;
	string s;
	while(n){
		s+=(n%10+'0');
		n/=10;
	}
	sort(s.begin(), s.end());
	l = s.size();
	for(i=0;i<l;i++)
		if(s[i]!='0'+i+1)
			return false;
	return true;
}
void init(){
	int i;
	for(i=1;i<MAXN;i++){
		arr[i] = valid(i);
		suff[i]=suff[i-1]+arr[i];
	}
}
int main ()
{	
	int i,j,t,a,b;
	init();
	scanf("%d",&t);
	assert(t<=100000);
	while(t--){
		scanf("%d %d",&a,&b);
		assert(1<=a && a<=1000000 && 1<=b && b<=1000000);
		printf("%d\n",suff[b]-suff[a-1]);
	}	
	return 0;	
}
