#include <bits/stdc++.h>
 
using namespace std;
typedef long long ll;
const int N = 200005;
int n;
ll arr[N], sufmax[N];
set<ll> values;
ll get_just_lower(ll val){
	set<ll>::iterator it = values.lower_bound(val);
	it--;
	return (*it);
}
int main(){
 
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin>>n;
    assert(n >= 1 && n <= 200000);
    for(int i=1;i<=n;i++){
    	cin>>arr[i];
    	assert(arr[i] >= 1 && arr[i] <= 1000*1000);
    }
    for(int i=n;i>=1;i--){
    	sufmax[i] = max(sufmax[i+1], arr[i+1]);
    }
    ll ans = 0;
    values.insert(-1);
    for(int i=1;i<=n;i++){
    	if(sufmax[i] > arr[i])
    		ans = max(ans, get_just_lower(arr[i]) * arr[i] * sufmax[i]);
    	values.insert(arr[i]);
    }
    cout<<ans;
    return 0;
}














#include <bits/stdc++.h>
#define nax 200005
using namespace std;
 
long long arr[nax], rgt[nax] , rep[nax],ans[nax];
int main()
{
    ios::sync_with_stdio(false);
    
    int n;
    cin>>n;
   
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
       
    }
    rgt[n-1] = arr[n-1];
    for(int i=n-2;i>=0;i--)
    {
       rgt[i] = max(rgt[i+1],arr[i]); 
    }
    ans[n-1] = 0;
    rep[n-1] = -1;
    for(int i=n-2;i>=0;i--){
        ans[i] = ans[i+1];
        rep[i] = rep[i+1];
        if(rgt[i+1]>arr[i]){
          
           if(rgt[i+1]*arr[i]>ans[i+1]){
               ans[i]=rgt[i+1]*arr[i];
               rep[i] = arr[i];
           }
          
        }
    }
    long long a = 0;
    for(int i=0;i<n-2;i++){
        if(rep[i+1]>arr[i]){
             a= max(a,ans[i+1]*arr[i]);
        }
    }
    cout<<a;
    
    
}
Language: C++
