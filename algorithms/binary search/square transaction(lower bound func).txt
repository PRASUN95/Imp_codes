#include <bits/stdc++.h>
 
#define MAX 100100
 
using namespace std;
 
int l[MAX];
 
int main() {
	int n, q, x;
	scanf("%d %d", &n, l);
	for(int i = 1; i < n; i++) {
		scanf("%d", &l[i]);
		l[i] += l[i-1];
	}
	for(scanf("%d", &q); q; --q) {
		scanf("%d", &x);
		int pos = lower_bound(l, l+n, x) - l;
		printf("%d\n", pos == n ? -1 : pos + 1);
	}
	return 0;
}
Language: C++



#include <bits/stdc++.h>
using namespace std;

int binary_search(int a[],int x,int lo,int hi){
    if(x>a[hi]) return -1;
    int trans_no=0;
    while(hi>=lo){
        int mid=lo+(hi-lo)/2;
        if(a[mid]>=x) {
            trans_no=mid;  hi=mid-1;
        }
        else lo=mid+1;
    }
    return trans_no;
}

int main()
{
    int n; cin>>n; int a[n+11];
    a[0]=0;
    for(int i=1;i<=n;i++) {
        cin>>a[i];
        a[i]+=a[i-1];
    }
    int q; cin>>q;
    while(q--){
        int x; cin>>x;
        cout<<binary_search(a,x,1,n)<<"\n";
    }
    //cout << "Hello World!" << endl;
    return 0;
}








    #include <stdio.h>
    int a[100000],sum[100000],T,q;
     
    int binarySearch(int l,int r,int element)
    {
    	if(l<=r)
    	{
    		int mid = (l+r)/2;
    		if(sum[mid]>=element && sum[mid-1]<element)
    			return mid;
    		if(sum[mid]>element)
    			binarySearch(l,mid-1,element);
    		if(sum[mid]<element)
    			binarySearch(mid+1,r,element);
    	}
    	else
    		return -1;
    }
     
    int main()
    {
    	int t_sum = 0;
    	scanf("%d",&T);
    	for(int i=0;i<T;i++)
    	{
    		scanf("%d",&a[i]);
    		t_sum += a[i];
    		sum[i] = t_sum;
    	}
    	scanf("%d",&q);
    	for(int i=0;i<q;i++)
    	{
    		int x;
    		scanf("%d",&x);
    		int ans = binarySearch(0,T-1,x);
    		if(ans!=-1)
    			printf("%d\n",ans+1);
    		else
    			printf("-1\n");
    	}
        return 0;
    }
Language: C