#include <bits/stdc++.h>
    using namespace std;
     
     
    bool compare(string a,string b)
    {
    	string c=a+b;
    	string d=b+a;
    	if(c<d)
    		return false;
     
    		return true;
    }
    	int p[100001]={0};
    int main()
    {
    	for(int i=2;i*i<100001;i++)
    	{
    		if(p[i]!=0)
    			continue;
    		for(int j=2;i*j<100001;j++)
    		{
    			p[i*j]=1;
    		}
    	}
    	p[0]=1;
    	p[1]=1;
    	int t;
    	cin>>t;
    	while(t--)
    	{
    		int n;
    		cin>>n;
    		string s;
    		int a=0,f=0,all=0;
    	    vector<string>v;
    		for(int i=0;i<n;i++)
    		{
    		    a=0;
    			cin>>s;
    			for(int j=0;s[j];j++)
    			{
    			   a=a*10+(s[j]-'0');
    			}
    			//cout<<a<<endl;
    			if(p[a]!=0){
    			    f=1;
    				v.push_back(s);
    				if(a==0)
    				    all++;
    			}
    		}
    		if(f==0)
    		{
    		    cout<<"No Secret Code!"<<endl;
    		    continue;
    		}
    		if(all==v.size())
    		{
    		    cout<<0<<endl;
    		    continue;
    		}
    		sort(v.begin(),v.end(),compare);
    		for(int i=0;i<v.size();i++)
    		    cout<<v[i];
    		cout<<endl;
    		v.clear();
    	}
    	return 0;
    }


#include <bits/stdc++.h>
using namespace std;
#define ll long long int 
 
ll vis[100005];
void sieve()
{
    ll i,j;
    vis[1]=vis[0]=1;
    for(i=2;i<=100000;i++)
    {
        if(!vis[i])
        {   
            for(j=2;j*i<=100000;j++)
            {
                vis[j*i]=1;
            }
        }
    }
}
 
bool cmp(string a,string b)
{
    string p=a+b;
    string q=b+a;
    return p.compare(q)>0?1:0;
}
 
int main()
{
    ll i,j,k,n,m,t;
    sieve();
    cin>>t;
    while(t--)
    {
        cin>>n;
        vector<string>v;
        for(i=0;i<n;i++)
        {
            cin>>k;
            if(vis[k])
            {
                string p=to_string(k);
 
                v.push_back(p);
            }
        }
 
        if(v.size()==0)
        {
            cout<<"No Secret Code!\n";
            continue;
        }
        sort(v.begin(), v.end(), [](string &s1, string &s2){ return s1+s2>s2+s1; });
        string res="";
        for(auto s:v)
            res+=s;
        while(res[0]=='0' && res.length()>1)
            res.erase(0,1);
        cout<<res<<"\n";
        
        
    }
    return 0;
}