#include <bits/stdc++.h>
using namespace std;
 
typedef int ll;
 
#define int long long
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define sz(x) ((int)x.size())
#define all(x) x.begin(),x.end()
 
typedef pair<int,int>pii;
typedef pair<int,pair<int,int> > piii;
 
const int mod=1e9+7;
 
int POWER[65];
int power(int a, int b) {int ret=1;while(b) {if(b&1) ret*=a;a*=a;if(ret>=mod) ret%=mod;if(a>=mod) a%=mod;b>>=1;}return ret;}
int inv(int x) {return power(x,mod-2);}
 
void precompute() {
	POWER[0]=1;
	for(int i=1;i<63;i++) POWER[i]=POWER[i-1]<<1LL;
}
 
const int maxn=3e6+55;
vector<int>graph[maxn],ans;
bool vis[maxn];
map<pii,int>mpp;
void dfs(int curr) {
	if(vis[curr])
		return;
	ans.pb(curr);
	vis[curr]=1;
	for (int i=0 ; i<graph[curr].size() ; i++) {
		if(vis[graph[curr][i]])	continue;
		dfs(graph[curr][i]);
		ans.pb(curr);
	}
}
ll main() {
	// freopen("Task.in","r",stdin);freopen("Task.out","w",stdout);
 
	std:ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	int n,m;
	cin>>n>>m;
 
	for (int i=0 ; i<m ; i++) {
		int u,v;
		cin>>u>>v;
		if(mpp.find(mp(u,v))!=mpp.end())	continue;
		mpp[mp(v,u)]=1;
		mpp[mp(u,v)]=1;
		graph[u].pb(v);
		graph[v].pb(u);
	}	
	dfs(1);
	cout<<ans.size()<<endl;
	for (int i=0 ; i<ans.size() ; i++) {
		cout<<ans[i]<<" ";
	}
	cout<<endl;
}
Language: C++