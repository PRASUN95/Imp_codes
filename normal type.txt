#include<stdio.h>
int main()
{
    int a[200005],i,j,n,k=0,m=0,d=0,u,q,flag=0;
    long int sum=0;
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    for(i=0;i<n;i++)
    {
        for(j=0;j<i;j++)
        {
            if(a[i]==a[j])
                break;
        }
        if(i==j)
        {
            d++;
            k=i;
        }
    }
    if(k==0)
    {
        for(u=n;u>=0;u--)
        {
            sum=sum+u;
        }
    }
    else
    {
        while(m<k)
        {
            if(flag==0)
            {
                sum=sum+n-k;
                m++;
            }
            if(a[m-1]==a[m])
            {
                sum=sum+n-k;
                flag=1;
                m++;
                continue;
            }
            if(a[m-1]!=a[m])
            {
                for(j=m;j<n;j++)
                {
                    if(a[j]==a[m-1])
                    {
                        q=j;
                        break;
                    }
                }
                if(j==n)
                {
                    break;
                }
                if(q<k)
                {
                    sum=sum+n-k;
                    m++;
                    flag=1;
                    continue;
                }
                if(k<q)
                {
                    k=q;
                    sum=sum+n-k;
                    m++;
                    flag=1;
                    continue;
                }
            }
    
        }
    }
    printf("%ld",sum);
}
Language: C

*****************************************************************************

#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define fr(i,a,n) for(int i=a;i<n;i++)
#define f first
#define s second
#define pb push_back
#define in insert
#define gc getchar_unlocked()
unordered_map<int,int> b,c;
void sci(int &n){
        n = 0;
        char c = gc;
        while(c>57 || c<48)c = gc;
        while(c>47 && c<58){
            n = (n<<1) + (n<<3) + (c-48);
            c = gc;
        }
    }
int main()
{
    int n,x=0;
    ll s=0;
    sci(n);
    int a[n+1];
    set<int> se;
    fr(i,0,n)
    {
        sci(a[i]);
        se.in(a[i]);
    }
    if(se.size()==1)
    {
        s=n;
        cout<<s*(s+1)/2;return 0;
    }
    set<int> po;
    fr(j,0,n)
    {
        while(po.size()<se.size()&&x<n)
        {
            po.in(a[x]);
            b[a[x]]++;
            x++;
        }
        if(x==n)
        break;
        s+=n-(x-1);
        b[a[j]]--;
        if(b[a[j]]==0)
        po.erase(a[j]);
        //cout<<s<<" "<<x<<" "<<po.size()<<"\n";
    }
    cout<<s;
    return 0;
}


****************************************************************************************
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <string.h>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <limits>
#include <string>
#include <cassert>
 
using namespace std;
typedef long long LL;
typedef pair<int,int> pii;
 
#define forup(i,a,b) for(int i=a; i<b; ++i)
#define fordn(i,a,b) for(int i=a; i>b; --i)
#define rep(i,a) for(int i=0; i<a; ++i)
 
#define dforup(i,a,b) for(i=a; i<b; ++i)
#define dfordn(i,a,b) for(i=a; i>b; --i)
#define drep(i,a) for(i=0; i<a; ++i)
 
#define slenn(s,n) for(n=0; s[n]!=13 and s[n]!=0; ++n);s[n]=0
 
#define gi(x) scanf("%d",&x)
#define gl(x) scanf("%lld",&x)
#define gd(x) scanf("%lf",&x)
#define gs(x) scanf("%s",x)
 
#define pis(x) printf("%d ",x)
#define pin(x) printf("%d\n",x)
#define pls(x) printf("%lld ",x)
#define pln(x) printf("%lld\n",x)
#define pds(x) printf("%.12f ",x)
#define pdn(x) printf("%.12f\n",x)
#define pnl() printf("\n")
 
#define fs first
#define sc second
#define ll long long
#define pb push_back
#define MOD 1000000007
#define limit 10000005
const int INF = 2000000000;
typedef pair<int,int> PII;
 
#define ull unsigned long long
using namespace std;
ull mod_pow(ull num, ull pow, ull mod)
{
    ull test,n = num;
    for(test = 1; pow; pow >>= 1)
    {
        if (pow & 1)
            test = ((test % mod) * (n % mod)) % mod;
        n = ((n % mod) * (n % mod)) % mod;
    }
    return test; /* note this is potentially lossy */
}
//while((getchar())!='\n'); //buffer clear
ll gcd(ll a,ll b)
{	ll r;
    while(b)
    {	r= a%b;a = b; b = r;
    }
    return a;
}
int main()
{
    int n;
    gi(n);
    int x;
    vector<int> v;
    set<int> p,s;
    rep(i,n)
    {   gi(x);
        v.pb(x);
        p.insert(x);
    }
    ll ans =0;
    int i =0;
    int j =0;
    map<int,int> mp;
    while(i<n)
    {
        j = max(j,i);
        while(j<n &&s.size()<p.size() )
        {
            mp[v[j]]++;
            if(mp[v[j]]==1)
                s.insert(v[j]);
            j++;
           
            
        }
         if(s.size()==p.size())
        {
        //        cout<<i<<" "<<j<<" "<<s.size()<<" " <<p.size()<<" "<<+n-j+1<< endl;
                ans = ans+n-j+1;
        }
        mp[v[i]]--;
        if(mp[v[i]]==0)
            s.erase(v[i]);
        i++;
       // cout<<"SSS"<<i<<" "<<j<<" "<<s.size()<<" " <<p.size()<<endl;
            
 
    }
    cout<<ans<<endl;
}
 
Language: C++14
********************************
**************************************"
******************************************************************************************
#include<stdio.h>
unsigned long * distinct(unsigned long a[],int N);
unsigned char search(unsigned long *b,int l,int r,unsigned long a);
unsigned char occur(unsigned long *a,int l,int r,unsigned long n);
int last;
int main()
{
    long int N,i;
    unsigned long *a,*b;
    unsigned long long count=0;
    scanf("%d",&N);
    if(N<1 || N>2*pow(10,5))
    return 0;
    a=malloc(N*sizeof(unsigned long));
    for(i=0;i<N;i++)
    {
        scanf(" %d",&a[i]);
        if(a[i]<1 || a[i]>pow(10,9))
        return 0;
    }
    b=calloc(N,sizeof(unsigned long));
    b=distinct(a,N);
    if(last!=0)
    count=N-last;
    else
    {
        count=(N*(N+1))/2;
        printf("%llu",count);
        return 0;
    }
    i=1;
    while(i<N)
    {
        if(search(a,i,last,a[i-1])=='y')
        {
            count+=N-last;
            i++;
            continue;
        }
        else if(occur(a,last+1,N-1,a[i-1])=='n')
        break;
        count+=N-last;
        i++;
    }
    printf("%lu",count);
    return 0;
    
}
unsigned long * distinct(unsigned long a[],int N)
{
    unsigned long *b;
    b=calloc(N,sizeof(unsigned long));
    int i,j=1;
    b[0]=a[0];
    for(i=1;i<N;i++)
    {
        if(search(b,0,j,a[i])=='n')
        {
            b[j]=a[i];
            j++;
            last=i;
        }
    }
    return b;
}
unsigned char search(unsigned long *b,int l,int r,unsigned long a)
{
    int i;
    for(i=l;i<=r;i++)
    {
        if(b[i]==a)
        return 'y';
    }
    return 'n';
}
unsigned char occur(unsigned long *a,int l,int r,unsigned long n)
{
    int i;
    for(i=l;i<=r;i++)
    {
        if(a[i]==n)
        {
            last=i;
            return 'y';
        }
    }
    return 'n';
}
Language: C