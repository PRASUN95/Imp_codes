#include <iostream>
#include <bits/stdc++.h>
using namespace std;
 
int main()
{
    long long int t,n,m,q,x,y,z,i,j,k,l,val1,val2,ans;
    scanf("%lld",&t);
    for(i=1;i<=t;i++)
    {
        scanf("%lld %lld",&n,&m);
        long long int a[n][m];
        for(j=0;j<n;j++)
        {
            for(k=0;k<m;k++)
            scanf("%lld",&a[j][k]);
        }
        scanf("%lld",&q);
        for(j=1;j<=q;j++)
        {
            scanf("%lld %lld %lld",&z,&x,&y);
            ans=0;
            if(z==1)
            {
                if(x-1>=0)
                ans+=a[x-1][y];
                if(x+1<n)
                ans+=a[x+1][y];
                if(y-1>=0)
                ans+=a[x][y-1];
                if(y+1<m)
                ans+=a[x][y+1];
                if(y%2!=0){
                if(x+1<n && y-1>=0)
                ans+=a[x+1][y-1];
                if(x+1<n && y+1<m)
                ans+=a[x+1][y+1];}
                else{
                if(x-1>=0 && y-1>=0)
                ans+=a[x-1][y-1];
                if(x-1>=0 && y+1<m)
                ans+=a[x-1][y+1];}
                printf("%lld\n",ans);
            }
            else
            {
                long long int vis[n][m];
                for(k=0;k<n;k++)
                {
                    for(l=0;l<m;l++)
                    vis[k][l]=0;
                }
                queue <pair <long long int, long long int > >q1;
                if(x-1>=0)
                {
                    q1.push(make_pair(x-1,y));
                    vis[x-1][y]=1;
                }
                if(x+1<n)
                {
                    q1.push(make_pair(x+1,y));
                    vis[x+1][y]=1;
                }
                if(y-1>=0)
                {
                    q1.push(make_pair(x,y-1));
                    vis[x][y-1]=1;
                }
                if(y+1<m)
                {
                    q1.push(make_pair(x,y+1));
                    vis[x][y+1]=1;
                }
                if(y%2!=0){
                if(x+1<n && y-1>=0)
                {
                    q1.push(make_pair(x+1,y-1));
                    vis[x+1][y-1]=1;
                }
                if(x+1<n && y+1<m)
                {
                    q1.push(make_pair(x+1,y+1));
                    vis[x+1][y+1]=1;
                }}
                else{
                if(x-1>=0 && y-1>=0)
                {
                    q1.push(make_pair(x-1,y-1));
                    vis[x-1][y-1]=1;
                }
                if(x-1>=0 && y+1<m)
                {
                    q1.push(make_pair(x-1,y+1));
                    vis[x-1][y+1]=1;
                }}
                vis[x][y]=1;
                while(!q1.empty())
                {
                    x=q1.front().first;
                    y=q1.front().second;
                    q1.pop();
                    if(x-1>=0 && vis[x-1][y]==0)
                    {
                        ans+=a[x-1][y];
                        vis[x-1][y]=1;
                    }
                    if(x+1<n && vis[x+1][y]==0)
                    {
                        ans+=a[x+1][y];
                        vis[x+1][y]=1;
                    }
                    if(y-1>=0 && vis[x][y-1]==0)
                    {
                        ans+=a[x][y-1];
                        vis[x][y-1]=1;
                    }
                    if(y+1<m && vis[x][y+1]==0)
                    {
                        ans+=a[x][y+1];
                        vis[x][y+1]=1;
                    }
                    if(y%2!=0){
                    if(x+1<n && y-1>=0 && vis[x+1][y-1]==0)
                    {
                        ans+=a[x+1][y-1];
                        vis[x+1][y-1]=1;
                    }
                    if(x+1<n && y+1<m && vis[x+1][y+1]==0)
                    {
                        ans+=a[x+1][y+1];
                        vis[x+1][y+1]=1;
                    }}
                    else{
                    if(x-1>=0 && y-1>=0 && vis[x-1][y-1]==0)
                    {
                        ans+=a[x-1][y-1];
                        vis[x-1][y-1]=1;
                    }
                    if(x-1>=0 && y+1<m && vis[x-1][y+1]==0)
                    {
                        ans+=a[x-1][y+1];
                        vis[x-1][y+1]=1;
                    }}
                }
                printf("%lld\n",ans);
            }
        }
    }
    return 0;
}
Language: C++

#include<bits/stdc++.h>
using namespace std;
long long arr[1005][1005];
int dx1[]={-1,1,0,0,1,1};
int dy1[]={0,0,-1,1,-1,1};
int dx11[]={-1,1,-1,-1,0,0};
int dy11[]={0,0,-1,1,-1,1};
int dx2[]={-2,2,-1,-1,0,1,2,2,1,0,-1,-1};
int dy2[]={0,0,-1,-2,-2,-2,-1,1,2,2,2,1};
int dx22[]={-2,2,-2,-1,0,1,1,1,1,0,-1,-2};
int dy22[]={0,0,-1,-2,-2,-2,-1,1,2,2,2,1};
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n,m;
        scanf("%d %d",&n,&m);
        int i,j;
        for(i=0;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
                scanf("%lld",&arr[i][j]);
            }
        }
        int q;
        scanf("%d",&q);
        while(q--)
        {
            int aa,bb,cc;
            scanf("%d %d %d",&aa,&bb,&cc);
            long long answ=0;
            if(aa==1)
            {
                for(i=0;i<6;i++)
                {
                    int dd,ee;
                    if(cc%2!=0)
                    dd=bb+dx1[i];
                    else
                    dd=bb+dx11[i];
                    if(cc%2!=0)
                    ee=cc+dy1[i];
                    else
                    ee=cc+dy11[i];
                    if(dd>=0&&ee>=0&&dd<n&&ee<m)
                    answ+=arr[dd][ee];
                }
            }
            else
            {
                for(i=0;i<12;i++)
                {
                    int dd,ee;
                    if(cc%2!=0)
                    dd=bb+dx2[i];
                    else
                    dd=bb+dx22[i];
                    if(cc%2!=0)
                    ee=cc+dy2[i];
                    else
                    ee=cc+dy22[i];
                    if(dd>=0&&ee>=0&&dd<n&&ee<m)
                    answ+=arr[dd][ee];
                }
            }
            printf("%lld\n",answ);
        }
    }
}