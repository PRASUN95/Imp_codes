https://www.hackerearth.com/practice/data-structures/arrays/1-d/practice-problems/algorithm/eedc/

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main()
{
	int n,q,*psum,*ssum,*arr,i,*ans,l,r;
	scanf("%d",&n);
	arr=(int*)calloc(n+2,sizeof(int)); //for storing array
	psum=(int*)calloc(n+2,sizeof(int));// for sum of integers in left side of an index
	ssum=(int*)calloc(n+2,sizeof(int)); // for sum of integers in right side of an index
	ans=(int*)calloc(n+2,sizeof(int));  // for ans of a index from 1st index
	//array input and prefix sum
	for(i=1;i<=n;i++)
	{
		scanf("%d",&arr[i]);
		psum[i]=arr[i-1]+psum[i-1];
	}
	//suffix sum
	for(i=n;i>=1;i--)
	{
		ssum[i]=arr[i+1]+ssum[i+1];
	}
	
	// if sum of digits is divisible by 3 then number is divisible by 3 thats why (psum[i]+ssum[i])%3==0
	//if last digit of a number is divisible by 2 then number is divisible by 2 thats why (arr[i-1]+arr[n])%2==0)
	// similarly for 5
	for(i=1;i<=n;i++)
	{
	    //printf("<%d  %d>\n",psum[i],ssum[i]);
		if((psum[i]+ssum[i])%3==0&&((arr[i-1]+arr[n])%5==0&&(arr[i-1]+arr[n])%2==0))
		ans[i]=1;
		ans[i]=ans[i-1]+ans[i];
	}
	scanf("%d",&q);
	while(q--)
	{
		scanf("%d%d",&l,&r);
		printf("%d\n",ans[r]-ans[l-1]);
	}
	
}
Language: C